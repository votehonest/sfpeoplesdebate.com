generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Status {
  PENDING  @map("pending")
  ASKED    @map("asked")
  ACCEPTED @map("accepted")
  ANSWERED @map("answered")
  REJECTED @map("rejected")
  DELETED  @map("deleted")
}

model Question {
  id        String    @id @unique @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt

  question String
  name     String?
  token    String  @unique @default(uuid())
  status   Status  @default(PENDING)

  candidateQuestions CandidateQuestion[]
}

model Candidate {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName  String?
  middleName String?
  lastName   String?
  email      String?
  phone      String?
  notes      String?
  token      String  @unique @default(uuid())
  active     Boolean @default(true)

  candidateQuestion CandidateQuestion[]

  @@unique([firstName, lastName])
}

model CandidateQuestion {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())

  status Status  @default(PENDING)
  answer String?

  candidateId String
  candidate   Candidate @relation(fields: [candidateId], references: [id])

  questionId String
  question   Question @relation(fields: [questionId], references: [id])
}
